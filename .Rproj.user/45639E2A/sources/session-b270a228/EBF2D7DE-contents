<!doctype html>
<html>
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta http-equiv="X-UA-Compatible" content="ie=edge" />
<title>Mapa Interactivo MBHT</title>
<style>
* {
  margin: 0;
  padding: 0;
}
html {
  font-family: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
    'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  background: white !important;
  color: #111 !important;
}
#mindmap {
  display: block;
  width: 100vw;
  height: 100vh;
  background-color: white;
}
svg#mindmap .node > text {
  fill: #111;
  font-size: 14px;
}
svg#mindmap .link {
  stroke: #ccc;
  stroke-width: 1.5px;
}
svg#mindmap .node circle {
  fill: #f9f9f9;
  stroke: #999;
  stroke-width: 1px;
}
@media (max-width: 768px) {
  svg#mindmap {
    font-size: 12px;
  }
}
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/markmap-toolbar@0.18.12/dist/style.css">
</head>
<body>
<svg id="mindmap"></svg>

<script src="https://cdn.jsdelivr.net/npm/d3@7.9.0/dist/d3.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/markmap-view@0.18.12/dist/browser/index.js"></script>
<script src="https://cdn.jsdelivr.net/npm/markmap-toolbar@0.18.12/dist/index.js"></script>

<script>
// 👇 Aquí defines tu contenido jerárquico
const treeData = {
  "content": "Título principal aquí",
  "children": [
    {
      "content": "Subsección 1",
      "payload": { "fold": true },
      "children": [
        { "content": "Ítem 1.1", "children": [] },
        { "content": "Ítem 1.2", "children": [] }
      ]
    },
    {
      "content": "Subsección 2",
      "payload": { "fold": true },
      "children": [
        { "content": "Ítem 2.1", "children": [] },
        { "content": "Ítem 2.2", "children": [] }
      ]
    }
  ]
};

(() => {
  const mm = window.markmap.Markmap.create("svg#mindmap", null, treeData);

  // Ajuste inicial
  setTimeout(() => mm.fit(), 500);

  // Detectar clicks en nodos y encuadrar después de animar
  const svg = document.querySelector('#mindmap');
  svg.addEventListener('click', e => {
    if (e.target.tagName === 'text' || e.target.tagName === 'circle') {
      setTimeout(() => mm.fit(), 500);
    }
  });
})();
</script>

</body>
</html>